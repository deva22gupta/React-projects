[{"C:\\Users\\devan\\Documents\\React\\weather-app\\src\\index.js":"1","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\App.js":"2","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\reportWebVitals.js":"3","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\Weather.js":"4","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\Recipe.js":"5","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\RecipeMap.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":267,"mtime":1621949254251,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2066,"mtime":1609330951810,"results":"11","hashOfConfig":"8"},{"size":3192,"mtime":1609571622885,"results":"12","hashOfConfig":"8"},{"size":2888,"mtime":1609575880664,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5lwz0y",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\devan\\Documents\\React\\weather-app\\src\\index.js",[],["30","31"],"C:\\Users\\devan\\Documents\\React\\weather-app\\src\\App.js",["32"],"C:\\Users\\devan\\Documents\\React\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\devan\\Documents\\React\\weather-app\\src\\Weather.js",["33","34"],"import React ,{useState,useEffect} from 'react'\r\nimport './Wea.css'\r\n\r\nconst api={\r\n    key :\"c8d416514d94a004cbe07d8dbc980480\",\r\n    base:\"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nfunction Weather() {\r\n    const [query,setQuery]=useState('')\r\n    const [weather,setWeather] = useState({})\r\n\r\n    const search = event =>{\r\n        if(event.key==\"Enter\"){\r\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n            .then(res => res.json())\r\n            .then(result => {setWeather(result) \r\n                setQuery('')\r\n            //console.log(weather)\r\n            console.log(result)\r\n            })\r\n        }\r\n    }\r\n\r\nconst dateBuilder = (d) => {\r\n    const months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n    const days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n    const day = days[d.getDay()];\r\n    const month = months[d.getMonth()]\r\n    let date= d.getDate()\r\n    let year = d.getFullYear()\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className= {(typeof weather.main != \"undefined\")?((weather.main.temp>16)? 'weer warm' : 'weer'): 'weer'}>\r\n\r\n<main>\r\n<div className='search-box'>\r\n    <input type='text' className='search-bar' placeholder='Search'\r\n    onChange={e => setQuery(e.target.value)}\r\n    value={query}\r\n    onKeyPress={search}\r\n    \r\n    />\r\n</div>\r\n\r\n{(typeof weather.main != 'undefined') ? (\r\n<div>\r\n<div>\r\n\r\n    <div className='location-box'>\r\n        <div className='location'> {weather.name},{weather.sys.country} </div>\r\n      <div className='date'>{dateBuilder(new Date())}</div>\r\n    \r\n    </div>\r\n</div>\r\n\r\n<div>\r\n<div className='weather-box'>\r\n    <div className='temp'>\r\n        {Math.round(weather.main.temp)}*C    </div>\r\n<div className='weather'>{weather.weather[0].main}</div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n): ('')}\r\n</main>\r\n\r\n\r\n\r\n        </div>\r\n    \r\n\r\n\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default Weather\r\n","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\Recipe.js",["35"],"import React, {useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport RecipeMap from './RecipeMap'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      margin: '10px auto',\r\n      alignItems: 'center',\r\n      width: 400,\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1,\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n    },\r\n    \r\n  }));\r\n  \r\n\r\nfunction Recipe() {\r\n    const classes = useStyles();\r\n\r\nconst APP_ID='028e1446'\r\nconst APP_KEY='04f3c29e3ccff7e192e1afe6eb51b2b6'\r\nconst [recipes,setRecipes] = useState([])\r\nconst [search,setSearch]= useState('')\r\nconst [query,setQuery] = useState('banana juice')\r\n //const [count,setCount] = useState(0)\r\n useEffect(\r\n     () => {\r\n         getRecipe();\r\n         //console.log('effect runs')\r\n     },[query]\r\n )\r\n\r\nconst getRecipe = async () =>{\r\n    const response = await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n   setRecipes(response.data.hits)\r\n    console.log(response.data.hits)\r\n\r\n};\r\nconst updateSearch = (e) => {\r\n    setSearch(e.target.value)\r\n    console.log(e.target.value)\r\n}\r\nconst updateQuery = (e) =>{\r\n    e.preventDefault()\r\n    setQuery(search)\r\n}\r\n\r\n    return (\r\n        <div >\r\n\r\n<Paper onSubmit={updateQuery} component=\"form\" className={classes.root}>\r\n      <IconButton className={classes.iconButton} aria-label=\"menu\">\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <InputBase\r\ntype='text' value= {search} onChange={updateSearch}\r\n\r\n        className={classes.input}\r\n        placeholder=\"Search from Recipe\"\r\n        inputProps={{ 'aria-label': 'search from recipe' }}\r\n      />\r\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n     \r\n     \r\n    </Paper>\r\n\r\n\r\n            {/* <form >\r\n                <input  />\r\n                <button type='submit'>Search</button>\r\n            </form> */}\r\n            {/* {count} */}\r\n            {/* <button onClick= {()=> setCount(count+1)}>Click</button> */}\r\n           \r\n           \r\n           \r\n           <Grid container>\r\n            {\r\n                recipes.map(\r\n                    (rec) => (\r\n                        <Grid item xs={3}>\r\n                        <RecipeMap\r\n                        key={rec.recipe.label}\r\n                        title={rec.recipe.label}\r\n                        calories={rec.recipe.calories}\r\n                        image={rec.recipe.image}\r\n                        ingredients={rec.recipe.ingredients}\r\n                        \r\n                        >\r\n\r\n</RecipeMap>\r\n</Grid>\r\n                    )\r\n                )\r\n            }\r\n\r\n          </Grid> \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n\r\n\r\n","C:\\Users\\devan\\Documents\\React\\weather-app\\src\\RecipeMap.js",["36","37"],"import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin:'10px auto'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n \r\n}));\r\n\r\n\r\nfunction RecipeMap({title,calories,image,ingredients}) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Card className={classes.root}>\r\n      <CardHeader\r\n       \r\n        title={title}\r\n       // subheader= {calories}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={image}\r\n        title={title}\r\n      />\r\n      \r\n      <CardActions disableSpacing>\r\n<div>Ingredients</div>\r\n\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n            \r\n        {ingredients.map(\r\n                (ingredient) => {\r\n                    <Typography paragraph>{ingredient.text} </Typography>\r\n                }\r\n            )}\r\n            \r\n\r\n          </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n\r\n        {/* Recipe work\r\n        <p>{title}</p>    \r\n        <p> {calories} </p>    \r\n        <img src={image} alt=''></img>\r\n        <ol>\r\n            \r\n        </ol> */}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default RecipeMap\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":1,"column":25,"nodeType":"44","messageId":"45","endLine":1,"endColumn":34},{"ruleId":"47","severity":1,"message":"48","line":14,"column":21,"nodeType":"49","messageId":"50","endLine":14,"endColumn":23},{"ruleId":"51","severity":1,"message":"52","line":46,"column":8,"nodeType":"53","endLine":46,"endColumn":15,"suggestions":"54"},{"ruleId":"42","severity":1,"message":"55","line":13,"column":10,"nodeType":"44","messageId":"45","endLine":13,"endColumn":13},{"ruleId":"56","severity":1,"message":"57","line":88,"column":30,"nodeType":"58","messageId":"59","endLine":88,"endColumn":32},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipe'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'red' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [getRecipe, query]",{"range":"65","text":"66"},[1213,1220],"[getRecipe, query]"]